{"version":3,"sources":["data/content.js","App.js","serviceWorker.js","index.js"],"names":["contact","name","phone","email","github","address","react_default","a","createElement","Fragment","sections","type","items","position","organization","city","fromDate","toDate","body","slugify","string","toLowerCase","replace","formatDate","dateStr","date","Date","parse","month","getMonth","year","getFullYear","concat","App","id","className","href","target","map","section","slug","key","sort","b","reverse","item","fromDateFormatted","toDateFormatted","undefined","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5f784fe8.chunk.js","sourcesContent":["import React from 'react'\n\nconst contact = {\n    name: 'Tristan Slater',\n    phone: '+1 778 922 3004',\n    email: 'hello@trslater.ca',\n    github: 'github.com/trslater',\n    address: <React.Fragment>\n        5-526 Harbinger Ave<br />\n        Victoria BC<br />\n        V8V 4J1\n    </React.Fragment>,\n}\n\nconst sections = [\n    {\n        name: 'Experience',\n        type: 'timeline',\n        items: [\n            {\n                position: 'Contract Designer',\n                organization: 'PureSafety Inc. (now part of UL)',\n                city: 'Edmonton AB',\n                fromDate: '2006-09-01',\n                toDate: '2008-01-01',\n                body: <ul>\n                    <li>Continued to expanded ActionScript ability</li>\n                </ul>\n            },\n            {\n                position: 'Contract Instructor',\n                organization: 'University of Alberta\\'s Technology Training Centre',\n                city: 'Edmonton AB',\n                fromDate: '2011-10-01',\n                toDate: '2013-09-01',\n                body: <ul>\n                    <li>Developed and taught courses in web development</li>\n                    <li>Taught cources in Microsoft Office and Creative Suite</li>\n                    <li>Consistently received excellent feedback from students</li>\n                </ul>,\n            },\n            {\n                position: 'Freelance Web Developer',\n                organization: 'Self Employed',\n                city: 'Edmonton AB / Victoria BC',\n                fromDate: '2008-05-01',\n                toDate: '2016-09-01',\n                body: <ul>\n                    <li>Created websites for a wide variety of clients from realtors to storytellers</li>\n                    <li>Managed client project life-cycle from conception to maintenance</li>\n                    <li>Constantly developed and improved development process/toolchain</li>\n                    <li>Learned PHP, JavaScript, and MySQL to create custom interactive content</li>\n                    <li>Kept current with relevant web technologies, frameworks, such as HTML5/CSS3 and WordPress</li>\n                </ul>,\n            },\n            {\n                position: 'Full-Time Creative Designer',\n                organization: 'PureSafety Inc. (now part of UL)',\n                city: 'West Kelowna BC',\n                fromDate: '2004-08-01',\n                toDate: '2006-03-01',\n                body: <ul>\n                    <li>Embraced chance for learning and development</li>\n                    <li>Learned ActionScript to contribute to interactive learning activities</li>\n                    <li>Used scripts to automate production</li>\n                </ul>,\n            },\n            {\n                position: 'Instructor',\n                organization: 'University of Alberta\\'s Technology Training Centre',\n                city: 'Edmonton AB',\n                fromDate: '2008-08-01',\n                toDate: '2009-09-01',\n                body: <ul>\n                    <li>Taught courses in Microsoft Office and Creative Suite</li>\n                    <li>Consistently received excellent feedback from students</li>\n                </ul>,\n            },\n        ],\n    },\n    {\n        name: 'Education',\n        type: 'timeline',\n        items: [\n            {\n                position: 'Bachelor of Software Engineering (3rd Year)',\n                organization: 'University of Victoria',\n                city: 'Victoria BC',\n                fromDate: '2016-09-01',\n                body: <ul>\n                    <li>Consistently strong performance</li>\n                    <li>Cumulative GPA: 8.16</li>\n                </ul>,\n            },\n        ],\n    },\n    {\n        name: 'Technical Competencies',\n        type: 'simple',\n        body: <ul>\n            <li>\n                Relevant Languages\n                <ul>\n                    <li>Python</li>\n                    <li>MySQL</li>\n                    <li>MATLAB</li>\n                    <li>R</li>\n                </ul>\n            </li>\n\n            <li>\n                Other Languages\n                <ul>\n                    <li>Java</li>\n                    <li>C</li>\n                    <li>JavaScript</li>\n                    <li>PHP</li>\n                    <li>HTML5/CSS3</li>\n                    <li>JavaScript</li>\n                </ul>\n            </li>\n\n            <li>\n                Software/Dev Tools\n                <ul>\n                    <li>Git/Github</li>\n                    <li>Docker</li>\n                    <li>Visual Studio Code</li>\n                    <li>Slack</li>\n                    <li>Adobe CS</li>\n                    <li>Microsoft Office</li>\n                </ul>\n            </li>\n\n            <li>\n                Linux / UNIX\n                <ul>\n                    <li>Filesystem</li>\n                    <li>Piping/redirection</li>\n                    <li>Bash/bash scripting</li>\n                </ul>\n            </li>\n        </ul>\n    },\n    {\n        name: 'Transferable Core Competencies',\n        type: 'simple',\n        body: <ul>\n            <li>Problem Solver</li>\n            <li>Critical Mind</li>\n            <li>Attention to Detail</li>\n            <li>Organized</li>\n        </ul>\n    },\n    {\n        name: 'Hobbies & Interests',\n        type: 'simple',\n        body: <ul>\n            <li>\n                Music\n                <ul>\n                    <li>Guitar</li>\n                    <li>Song writing</li>\n                    <li>Recording engineering</li>\n                </ul>\n            </li>\n            <li>\n                Outdoors\n                <ul>\n                    <li>Camping</li>\n                    <li>Hiking</li>\n                </ul>\n            </li>\n            <li>\n                Mathematics\n                <ul>\n                    <li>Puzzles</li>\n                    <li>Visualizations</li>\n                </ul>\n            </li>\n            <li>\n                Family\n                <ul>\n                    <li>Parenting</li>\n                </ul>\n            </li>\n        </ul>\n    },\n]\n\nexport { contact, sections }","import React from 'react';\nimport './App.css';\nimport { contact, sections } from 'data/content'\n\nconst App = () => {\n\tconst { name, phone, email, github, address } = contact\n\n\treturn <article id={'resume'} className={'grid'}>\n\t\t<header>\n\t\t\t<div id={'me'}>\n\t\t\t\t<h1>Tristan Slater</h1>\n\t\t\t</div>\n\n\t\t\t<ul id={'contact'}>\n\t\t\t\t<li><a href={`tel:${phone.replace(/\\s/g, '')}`}>{phone}</a>\n\n\t\t\t\t</li><li><a href={`mailto:${name} <${email}>`} target={'_blank'}>{email}</a></li>\n\n\t\t\t\t<li><a href={`https://${github}`}>{github}</a></li>\n\t\t\t</ul>\n\n\t\t\t<div id={'address'}>{address}</div>\n\t\t</header>\n\n\t\t{sections.map(section => {\n\t\t\tconst slug = slugify(section.name)\n\n\t\t\treturn <section\n\t\t\t\tkey={slug}\n\t\t\t\tid={slug}\n\t\t\t\tclassName={(section.type === 'timeline')\n\t\t\t\t\t? 'timelineSection'\n\t\t\t\t\t: 'regularSection'}\n\t\t\t>\n\t\t\t\t<h2>{section.name}</h2>\n\t\t\t\t{(section.type === 'timeline') ? section.items.sort((a, b) => {\n\t\t\t\t\tif (a.toDate < b.toDate) {\n\t\t\t\t\t\treturn -1;\n\t\t\t\t\t} else if (a.toDate > b.toDate) {\n\t\t\t\t\t\treturn 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\t}\n\t\t\t\t}).reverse().map(item => {\n\t\t\t\t\tconst {\n\t\t\t\t\t\tposition,\n\t\t\t\t\t\torganization,\n\t\t\t\t\t\tcity,\n\t\t\t\t\t\tfromDate,\n\t\t\t\t\t\ttoDate,\n\t\t\t\t\t\tbody\n\t\t\t\t\t} = item\n\n\t\t\t\t\tconst fromDateFormatted = formatDate(fromDate)\n\t\t\t\t\tconst toDateFormatted = (toDate === undefined)\n\t\t\t\t\t\t? 'present'\n\t\t\t\t\t\t: formatDate(toDate)\n\n\t\t\t\t\treturn <section\n\t\t\t\t\t\tclassName={'item'}\n\t\t\t\t\t\tid={slugify(`${position} ${organization}`)}\n\t\t\t\t\t>\n\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t<div className={'date'}>{fromDateFormatted}–{toDateFormatted}</div>\n\t\t\t\t\t\t\t<div className={'location'}>{city}</div>\n\t\t\t\t\t\t</header>\n\n\t\t\t\t\t\t<div className={'body'}>\n\t\t\t\t\t\t\t<h3>{position}</h3>\n\t\t\t\t\t\t\t<h4>{organization}</h4>\n\t\t\t\t\t\t\t{body}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</section>\n\t\t\t\t}) : section.body}\n\t\t\t</section>\n\t\t})}\n\t</article>\n}\n\nconst slugify = string => string\n\t.toLowerCase()\n\t.replace(/\\s/g, '-')\n\t.replace(/[^a-z0-9-]/g, '')\n\nconst formatDate = dateStr => {\n\tconst date = new Date(Date.parse(dateStr + 'T01:00:00'))\n\tconst month = [\n\t\t'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun',\n\t\t'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec',\n\t][date.getMonth()]\n\tconst year = date.getFullYear()\n\n\treturn `${month} ${year}`\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}